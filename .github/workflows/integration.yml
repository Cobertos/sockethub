name: Integration
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongooseim:
        image: mongooseim/mongooseim:latest
        ports:
          - 5222:5222

      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Verify Redis is listening
        run: nc -zv localhost 6379

      - name: Verify MongooseIM is listening
        run: nc -zv localhost 5222

      - name: Create XMPP account
        run: docker exec -i ${{ job.services.mongooseim.id }} /usr/lib/mongooseim/bin/mongooseimctl register_identified jimmy localhost passw0rd

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Sockethub
        run: yarn run build

      - name: Run integration tests
        run: |
          packages/sockethub/bin/sockethub &
          sleep 5
          nc -zv localhost 10550
          yarn run integration
        env:
          DEBUG: sockethub*

#  docker run -d -t -h mongooseim-1 --name mongooseim-1 -p 5222:5222 mongooseim/mongooseim:latest
#  docker exec mongooseim-1 /usr/lib/mongooseim/bin/mongooseimctl register_identified jimmy localhost passw0rd