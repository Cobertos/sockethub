name: Integration
on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest

    services:
#      prosody:
#        image: prosody/prosody:latest
#        ports:
#          - 5222:5222
#        options: --name prosody
#        volumes:
#          - /__w/prosody:/etc/prosody
#        env:
#          LOCAL: jimmy
#          DOMAIN: localhost
#          PASSWORD: passw0rd

      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    strategy:
      matrix:
        node-version: [14.x, 16.x]

    steps:
#      - run: sudo chown -R $USER:$USER ${{ github.workspace }}
      - name: Checkout repository
        uses: actions/checkout@v2

      services:
        prosody:
          image: prosody/prosody:latest
          ports:
            - 5222:5222
          options: --name prosody
          volumes:
            - ${{ github.workspace }}/test/prosody:/etc/prosody
          env:
            LOCAL: jimmy
            DOMAIN: localhost
            PASSWORD: passw0rd

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: sleep 10

      - name: Prosody logs
        run: docker logs prosody

      - name: Verify Redis is listening
        run: nc -zv localhost 6379

      - name: Verify Prosody is listening
        run: nc -zv localhost 5222

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Build Sockethub
        run: yarn run build

      - name: Run integration tests
        run: |
          packages/sockethub/bin/sockethub &
          sleep 5
          nc -zv localhost 10550
          yarn run integration
        env:
          DEBUG: sockethub*